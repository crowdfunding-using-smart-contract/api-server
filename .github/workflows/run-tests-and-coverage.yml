name: Test and coverage

on: [push, pull_request]
env:
  email_sender_name: ${{ vars.EMAIL_SENDER_NAME }}
  email_sender_address: ${{ vars.EMAIL_SENDER_ADDRESS }}
  email_sender_password: ${{ vars.EMAIL_SENDER_PASSWORD }}

jobs:
  test-and-coverage:
    strategy:
      matrix:
        go: ["1.22"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
          cache: false

      - name: Create .env file
        run: |
          touch .env
          echo "ApiServerConfig.EMAIL_SENDER_NAME=$email_sender_name" >> .env
          echo "ApiServerConfig.EMAIL_SENDER_ADDRESS=$email_sender_address" >> .env
          echo "ApiServerConfig.EMAIL_SENDER_PASSWORD=$email_sender_password" >> .env

      - name: Run coverage
        run: go test ./... -race -coverprofile=coverage.out -covermode=atomic

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: crowdfunding-using-smart-contract/api-server
