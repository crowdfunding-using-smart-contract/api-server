definitions:
  ErrorResponse:
    properties:
      error:
        type: string
      status:
        type: string
      status_code:
        type: integer
    type: object
  MessageResponse:
    properties:
      message:
        type: string
      status:
        type: string
      status_code:
        type: integer
    type: object
  PaginateResult-Transaction:
    properties:
      current_page:
        type: integer
      data:
        items:
          $ref: '#/definitions/Transaction'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      per_page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  Project:
    properties:
      category:
        $ref: '#/definitions/ProjectCategory'
      created_at:
        type: string
      current_amount:
        type: number
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      image:
        type: string
      launch_date:
        type: string
      monetary_unit:
        type: string
      owner:
        $ref: '#/definitions/User'
      rating:
        type: number
      start_date:
        type: string
      sub_category:
        $ref: '#/definitions/ProjectSubCategory'
      sub_title:
        type: string
      target_amount:
        type: number
      title:
        type: string
    type: object
  ProjectCategory:
    properties:
      id:
        type: string
      name:
        type: string
      subcategories:
        items:
          $ref: '#/definitions/ProjectSubCategory'
        type: array
    type: object
  ProjectSubCategory:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  ResultResponse-PaginateResult-Transaction:
    properties:
      result:
        $ref: '#/definitions/PaginateResult-Transaction'
      status:
        type: string
      status_code:
        type: integer
    type: object
  ResultResponse-Project:
    properties:
      result:
        $ref: '#/definitions/Project'
      status:
        type: string
      status_code:
        type: integer
    type: object
  ResultResponse-Transaction:
    properties:
      result:
        $ref: '#/definitions/Transaction'
      status:
        type: string
      status_code:
        type: integer
    type: object
  ResultResponse-User:
    properties:
      result:
        $ref: '#/definitions/User'
      status:
        type: string
      status_code:
        type: integer
    type: object
  ResultResponse-UserLoginResponse:
    properties:
      result:
        $ref: '#/definitions/UserLoginResponse'
      status:
        type: string
      status_code:
        type: integer
    type: object
  ResultResponse-array_Project:
    properties:
      result:
        items:
          $ref: '#/definitions/Project'
        type: array
      status:
        type: string
      status_code:
        type: integer
    type: object
  ResultResponse-array_ProjectCategory:
    properties:
      result:
        items:
          $ref: '#/definitions/ProjectCategory'
        type: array
      status:
        type: string
      status_code:
        type: integer
    type: object
  ResultResponse-bool:
    properties:
      result:
        type: boolean
      status:
        type: string
      status_code:
        type: integer
    type: object
  ResultResponse-internal_http_handler_RenewAccessTokenResponse:
    properties:
      result:
        $ref: '#/definitions/internal_http_handler.RenewAccessTokenResponse'
      status:
        type: string
      status_code:
        type: integer
    type: object
  Transaction:
    properties:
      created_at:
        type: string
      id:
        type: integer
      ref_code:
        type: string
      updated_at:
        type: string
    type: object
  TransactionCreatePayload:
    properties:
      ref_code:
        type: string
    required:
    - ref_code
    type: object
  User:
    properties:
      birthdate:
        type: string
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: string
      is_email_verified:
        type: boolean
      profile_image:
        type: string
      updated_at:
        type: string
    type: object
  UserCreatePayload:
    properties:
      birthdate:
        type: string
      email:
        type: string
      firstname:
        type: string
      gender:
        type: string
      lastname:
        type: string
      password:
        type: string
      password_confirmation:
        type: string
    required:
    - birthdate
    - email
    - firstname
    - gender
    - lastname
    - password
    - password_confirmation
    type: object
  UserLoginPayload:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  UserLoginResponse:
    properties:
      access_token:
        type: string
      access_token_expired_at:
        type: string
      refresh_token:
        type: string
      refresh_token_expired_at:
        type: string
      session_id:
        type: string
      user:
        $ref: '#/definitions/User'
    type: object
  fund-o_api-server_internal_entity.ProjectCreatePayload:
    properties:
      category_id:
        type: string
      description:
        type: string
      end_date:
        type: string
      image:
        type: string
      launch_date:
        type: string
      monetary_unit:
        type: string
      sub_category_id:
        type: string
      sub_title:
        type: string
      target_amount:
        type: number
      title:
        type: string
    required:
    - category_id
    - end_date
    - sub_category_id
    - sub_title
    - target_amount
    - title
    type: object
  fund-o_api-server_internal_entity.ProjectRatingCreatePayload:
    properties:
      rating:
        maximum: 5
        minimum: 0
        type: number
    required:
    - rating
    type: object
  internal_http_handler.RenewAccessTokenPayload:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  internal_http_handler.RenewAccessTokenResponse:
    properties:
      access_token:
        type: string
      access_token_expired_at:
        type: string
    type: object
  internal_http_handler.SendVerifyEmailPayload:
    properties:
      email:
        type: string
    required:
    - email
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: FundO API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      operationId: Login
      parameters:
      - description: User data to be authenticated
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/UserLoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResultResponse-UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Authenticate User
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create user with specific user data and role
      operationId: Register
      parameters:
      - description: User data to be created
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/UserCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResultResponse-User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Register User
      tags:
      - auth
  /auth/renew-token:
    post:
      consumes:
      - application/json
      description: Renew access token with refresh token
      operationId: RenewAccessToken
      parameters:
      - description: Refresh token to be renewed
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/internal_http_handler.RenewAccessTokenPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResultResponse-internal_http_handler_RenewAccessTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Renew Access Token
      tags:
      - auth
  /auth/send-verify-email:
    post:
      consumes:
      - application/json
      description: Send verify email to user email
      operationId: SendVerifyEmail
      parameters:
      - description: User email to be verified
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/internal_http_handler.SendVerifyEmailPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Send Verify Email
      tags:
      - auth
  /auth/verify-email:
    get:
      consumes:
      - application/json
      description: Verify email with email id and secret code
      operationId: VerifyEmail
      parameters:
      - description: Email ID to be verified
        in: query
        name: email_id
        required: true
        type: string
      - description: Secret Code to be verified
        in: query
        name: secret_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResultResponse-User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Verify Email
      tags:
      - auth
  /hello:
    get:
      description: Health checking for the service
      operationId: GetHelloMessageHandler
      parameters:
      - description: name of the active user
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MessageResponse'
      summary: Health Check
      tags:
      - healthcheck
  /projects:
    post:
      description: Create project with required data
      operationId: CreateProject
      parameters:
      - description: Project data to be created
        in: body
        name: Project
        required: true
        schema:
          $ref: '#/definitions/fund-o_api-server_internal_entity.ProjectCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResultResponse-Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Project
      tags:
      - projects
  /projects/{id}/ratings:
    post:
      consumes:
      - application/json
      description: Create project rating with required data
      operationId: CreateProjectRating
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Project rating data to be created
        in: body
        name: ProjectRating
        required: true
        schema:
          $ref: '#/definitions/fund-o_api-server_internal_entity.ProjectRatingCreatePayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/ResultResponse-Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Project Rating
      tags:
      - projects
  /projects/{id}/ratings/verify:
    get:
      consumes:
      - application/json
      description: Verify project rating by user
      operationId: VerifyProjectRating
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResultResponse-bool'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Verify Project Rating
      tags:
      - projects
  /projects/categories:
    get:
      description: List project categories for selection
      operationId: ListProjectCategories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResultResponse-array_ProjectCategory'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List Project Categories
      tags:
      - projects
  /projects/own:
    get:
      description: Get own projects with authenticate creator
      operationId: GetOwnProjects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResultResponse-array_Project'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get own Projects
      tags:
      - projects
  /transactions:
    get:
      description: Get list of transactions
      operationId: ListTransactions
      parameters:
      - description: number of page
        in: query
        name: page
        type: integer
      - description: size of data per page
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResultResponse-PaginateResult-Transaction'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: List Transaction
      tags:
      - transasctions
    post:
      description: Create transaction with reference code
      operationId: CreateTransaction
      parameters:
      - description: Transaction data to be created
        in: body
        name: Transaction
        required: true
        schema:
          $ref: '#/definitions/TransactionCreatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResultResponse-Transaction'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create Transaction
      tags:
      - transasctions
  /transactions/{id}:
    get:
      description: Get transaction by id
      operationId: GetTransaction
      parameters:
      - description: reference code of transaction
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResultResponse-Transaction'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Get Transaction
      tags:
      - transasctions
  /users/me:
    get:
      description: Get current user by validating authorization token
      operationId: GetMe
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResultResponse-User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get current user
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
